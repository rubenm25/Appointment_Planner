{"ast":null,"code":"var _jsxFileName = \"/Users/rubenmicula/Desktop/appointment-planner-starting-v18/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n\n  function addContact(name, phoneNumber, email) {\n    const newContact = {\n      name: name,\n      phone: phoneNumber,\n      email: email\n    };\n    setContacts(...contacts, newContact);\n    console.log(contacts, \"testttt\", newContact);\n  }\n  ;\n  function addAppointment(name, contact, date, time) {\n    const newAppointment = {\n      name: name,\n      contact: contact,\n      date: date,\n      time: time\n    };\n    setContacts(...appointments, newAppointment);\n  }\n  ;\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contactArr: contacts,\n        contactFn: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 49\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointmentsArr: appointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 53\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+1y/1BnmIhP8h81VJGlgTJ1XkaE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContact","name","phoneNumber","email","newContact","phone","console","log","addAppointment","contact","date","time","newAppointment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","contactArr","contactFn","APPOINTMENTS","appointmentsArr","_c","$RefreshReg$"],"sources":["/Users/rubenmicula/Desktop/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [ appointments, setAppointments] = useState([]);\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n    function addContact(name, phoneNumber, email) {\r\n      const newContact = {\r\n        name: name,\r\n        phone: phoneNumber,\r\n        email: email\r\n      };\r\n\r\n      setContacts(...contacts, newContact);\r\n\r\n      console.log(contacts, \"testttt\", newContact)\r\n    };\r\n\r\n    function addAppointment(name, contact, date, time ) {\r\n      const newAppointment = {\r\n        name: name,\r\n        contact: contact,\r\n        date: date,\r\n        time: time\r\n      };\r\n\r\n      setContacts(...appointments, newAppointment);\r\n      \r\n    };\r\n\r\n\r\n    const router = createBrowserRouter(createRoutesFromElements(\r\n      <Route path=\"/\" element={ <Root/> }>\r\n        <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n        <Route path={ROUTES.CONTACTS} element={ <ContactsPage contactArr={contacts} contactFn={addContact} /> /* Add props to ContactsPage */ }/>\r\n        <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage appointmentsArr={appointments} /> /* Add props to AppointmentsPage */ }/>\r\n      </Route>\r\n    ));\r\n    \r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}