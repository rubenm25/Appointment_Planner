{"ast":null,"code":"var _jsxFileName = \"/Users/rubenmicula/Desktop/appointment-planner-starting-v18/src/components/tileList/TileList.js\";\nimport React from \"react\";\nimport { Tile } from \"../tile/Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TileList = props => {\n  var _props$contactArr;\n  // const tiles = props.contactArr ? props.contactArr.map((info, index) => <Tile info={info} key={index} />) : \"shit\";\n\n  const contactTiles = (_props$contactArr = props.contactArr) === null || _props$contactArr === void 0 ? void 0 : _props$contactArr.map((info, index) => /*#__PURE__*/_jsxDEV(Tile, {\n    info: info\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 63\n  }, this));\n  const appointmentTiles = props.appointmentsArr.map((info, index) => /*#__PURE__*/_jsxDEV(Tile, {\n    info: info\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 71\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [contactTiles, appointmentTiles]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TileList;\nvar _c;\n$RefreshReg$(_c, \"TileList\");","map":{"version":3,"names":["React","Tile","jsxDEV","_jsxDEV","TileList","props","_props$contactArr","contactTiles","contactArr","map","info","index","fileName","_jsxFileName","lineNumber","columnNumber","appointmentTiles","appointmentsArr","children","_c","$RefreshReg$"],"sources":["/Users/rubenmicula/Desktop/appointment-planner-starting-v18/src/components/tileList/TileList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = (props) => {\r\n  \r\n  // const tiles = props.contactArr ? props.contactArr.map((info, index) => <Tile info={info} key={index} />) : \"shit\";\r\n\r\n  const contactTiles = props.contactArr?.map((info, index) => <Tile info={info} key={index} />);\r\n  const appointmentTiles = props.appointmentsArr.map((info, index) => <Tile info={info} key={index} />);\r\n  return (\r\n    <div>\r\n      {contactTiles}\r\n      {appointmentTiles}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA,IAAAC,iBAAA;EAEjC;;EAEA,MAAMC,YAAY,IAAAD,iBAAA,GAAGD,KAAK,CAACG,UAAU,cAAAF,iBAAA,uBAAhBA,iBAAA,CAAkBG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKR,OAAA,CAACF,IAAI;IAACS,IAAI,EAAEA;EAAK,GAAMC,KAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC;EAC7F,MAAMC,gBAAgB,GAAGX,KAAK,CAACY,eAAe,CAACR,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKR,OAAA,CAACF,IAAI;IAACS,IAAI,EAAEA;EAAK,GAAMC,KAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC;EACrG,oBACEZ,OAAA;IAAAe,QAAA,GACGX,YAAY,EACZS,gBAAgB;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAEV,CAAC;AAACI,EAAA,GAZWf,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}